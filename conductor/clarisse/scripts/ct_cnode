#!/usr/bin/env python

import os
import re
import errno
import sys
import argparse
import subprocess


def mkdir_p(dirs):
    """Make directories unless they already exist."""
    for d in dirs:
        try:
            os.makedirs(d)
            sys.stdout.write("Made Directory:{}\n".format(d))
        except OSError as ex:
            if ex.errno == errno.EEXIST and os.path.isdir(d):
                pass
            else:
                raise


def main():
    """Wrapper to run cnode with conductor adjustments.

    Clarisse allows multiple images to be rendered, and
    each may have a different save_as destination. If the
    destination folders don't exist then the cnode will fail.
    So here, argparse extracts -directory args and creates
    them first.

    """
    parser = argparse.ArgumentParser(add_help=False)
    parser.add_argument('-directories', nargs='*', required=False)
    args, pass_through_args = parser.parse_known_args()
    proj = pass_through_args[0]

    # We will change to the working directory because cnode
    # cannot deal with spaces in the project filepath. We have
    # eliminated spaces from the filename. But the dirname is
    # beyond our control, so we just cd into it and work from
    # there.
    # https://www.isotropix.com/user/bugtracker/363 .

    work_dir, basename = (os.path.dirname(proj), os.path.basename(proj))
    pass_through_args[0] = basename

    cnode_args = ["cnode"] + pass_through_args

    if args.directories:
        mkdir_p(args.directories)

    sys.stdout.write("Running :{} in {}\n".format(
        " ".join(cnode_args), work_dir))

    os.chdir(work_dir)

    p = subprocess.Popen(cnode_args,  stdout=subprocess.PIPE,
                         stderr=subprocess.STDOUT)

    for line in iter(p.stdout.readline, b''):
        sys.stdout.write(line)
        sys.stdout.flush()


main()
